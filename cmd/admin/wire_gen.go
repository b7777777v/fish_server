// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/b7777777v/fish_server/internal/app/admin"
	"github.com/b7777777v/fish_server/internal/biz/player"
	"github.com/b7777777v/fish_server/internal/biz/wallet"
	"github.com/b7777777v/fish_server/internal/conf"
	"github.com/b7777777v/fish_server/internal/data"
	"github.com/b7777777v/fish_server/internal/pkg/logger"
	"github.com/b7777777v/fish_server/internal/pkg/token"
)

// Injectors from wire.go:

// initApp 組裝完整的依賴圖，返回 AdminApp 實例
func initApp(config *conf.Config) (*admin.AdminApp, func(), error) {
	server := config.Server
	confData := config.Data
	log := config.Log
	sugaredLogger, cleanup, err := logger.NewLogger(log)
	if err != nil {
		return nil, nil, err
	}
	dataData, cleanup2, err := data.NewData(confData, sugaredLogger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	playerRepo := data.NewPlayerRepo(dataData, sugaredLogger)
	jwt := config.JWT
	tokenHelper := token.NewTokenHelper(jwt)
	playerUsecase := player.NewPlayerUsecase(playerRepo, tokenHelper, sugaredLogger)
	walletRepo := data.NewWalletRepo(dataData, sugaredLogger)
	walletUsecase := wallet.NewWalletUsecase(walletRepo, sugaredLogger)
	adminService := admin.NewAdminService(playerUsecase, walletUsecase, sugaredLogger)
	adminServer := admin.NewServer(server, adminService, sugaredLogger)
	adminApp := admin.NewAdminApp(adminServer, sugaredLogger)
	return adminApp, func() {
		cleanup2()
		cleanup()
	}, nil
}
