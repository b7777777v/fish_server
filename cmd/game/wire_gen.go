// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/b7777777v/fish_server/internal/app/game"
	"github.com/b7777777v/fish_server/internal/biz/player"
	"github.com/b7777777v/fish_server/internal/conf"
	"github.com/b7777777v/fish_server/internal/data"
	"github.com/b7777777v/fish_server/internal/pkg/logger"
	"github.com/b7777777v/fish_server/internal/pkg/token"
)

// Injectors from wire.go:

func initApp(config *conf.Config) (*game.GameApp, func(), error) {
	confData := config.Data
	log := config.Log
	sugaredLogger, cleanup, err := logger.NewLogger(log)
	if err != nil {
		return nil, nil, err
	}
	dataData, cleanup2, err := data.NewData(confData, sugaredLogger)
	if err != nil {
		cleanup()
		return nil, nil, err
	}
	playerRepo := data.NewPlayerRepo(dataData, sugaredLogger)
	jwt := config.JWT
	tokenHelper := token.NewTokenHelper(jwt)
	playerUsecase := player.NewPlayerUsecase(playerRepo, tokenHelper, sugaredLogger)
	gameServer := game.NewGameServer(playerUsecase)
	gameApp := game.NewGameApp(gameServer)
	return gameApp, func() {
		cleanup2()
		cleanup()
	}, nil
}
